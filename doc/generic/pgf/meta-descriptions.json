{
    "tutorial": "This tutorial is intended for new users of TikZ, explaining features of TikZ that you are likely to use right away.",
    "tutorial-nodes": "In this second tutorial we explore the node mechanism of TikZ and pgf.",
    "tutorial-Euclid": "In this third tutorial we have a look at how TikZ can be used to draw geometric constructions, by recreating a picture from Euclid's Elements.",
    "tutorial-chains": "In this tutorial we have a look at how graphs and matrices can be used to typeset a diagram with TikZ.",
    "tutorial-map": "In this tutorial we explore the tree and mind map mechanisms of TikZ, by creating a colorful map for a lecture course.",
    "guidelines": "This section is not about pgf or TikZ, but about general guidelines and principles concerning the creation of graphics for scientific presentations, papers, and books.",
    "tikz-design": "This section describes the design principles behind the TikZ frontend, its syntax and commands.",
    "tikz-scopes": "This section explains how your files should be structured when you use TikZ, explaining tikzpicture and scopes.",
    "tikz-coordinates": "A coordinate is a position on the canvas on which your picture is drawn. TikZ uses a special syntax for specifying coordinates, using one of many different possible coordinate systems.",
    "tikz-paths": "A path is a series of straight and curved line segments. It is specified following a path command and the specification must follow a special syntax, which is described in the subsections of the present section.",
    "tikz-actions": "Using path actions, a path can be drawn with a “pen”, filled with a color or shading, or used for clipping subsequent drawing – or any combination of these actions at the same time.",
    "tikz-arrows": "TikZ allows you to add (multiple) arrow tips to the end of lines as in ->. You can have several arrow tips in a row, and you can change the appearance of each of them individually using a special syntax.",
    "tikz-shapes": "A node is typically a rectangle or circle or another simple shape with some text on it. In the simplest case, a node is just some text that is placed at some coordinate.",
    "tikz-pics": "A “pic” is a “short picture” that can be inserted anywhere in TikZ picture where you could also insert a node.",
    "tikz-graphs": "TikZ offers a powerful path command for specifying how the nodes in a graph are connected by edges and arcs: The graph path command, which becomes available when you load the graphs library.",
    "tikz-matrices": "When creating pictures, one often faces the problem of correctly aligning parts of the picture. Matrices are a powerful tool for this purpose.",
    "tikz-trees": "Trees are a common way of visualizing hierarchical structures. In TikZ, there are two ways of specifying trees: Using either the graph path operation or using the child path operation.",
    "tikz-plots": "TikZ can be used to create plots of functions, a job that is normally handled by powerful programs like gnuplot or Mathematica. The advantage of creating plots directly using TikZ is consistency: Plots created using TikZ will automatically have the same styling and fonts as those used in the rest of a document.",
    "tikz-transparency": "TikZ has different ways of specifying “how transparent” newly drawn objects should be. You can specify a percentage like “60% transparent”. A much more general way is to use fading, also known as a soft mask or a mask.",
    "tikz-decorations": "Decorations are a general concept to make (sub)paths “more interesting”. For instance, with the zigzag decoration, the new path is a zigzagging line that goes along the old path.",
    "tikz-transformations": "pgf has a powerful transformation mechanism that is similar to the transformation capabilities of metafont. The present section explains how you can access it in TikZ.",
    "tikz-animations": "An animation changes the appearance of some part of a graphic over time. TikZ allows you to specify animations using special keys and notations, which works for SVG output."
}